const domain = require('domain');
const net = require('net');

const d = domain.create();

d.on('error', (domainErr) => {
    console.log("Erro na tentativa de conex√£o:  Erro : "+ domainErr.message);
    
    //reconectar.push(coletores[i].ip)
        
        
   // console.log("teste: " + domainErr)
});

 var coletores = [{numero: 2, ip: "192.168.0.39", porta: '2050', nomeColetor: "Entrada02" , status: "0"},
 {numero: 3, ip: "localhost", porta: '2050', nomeColetor: "Entrada01", status: "0"}
 ]

var clientes =[]
var reconectar =[];



for(let i=0;i<coletores.length;i++){
   d.run(() => {
   clientes.push(new net.Socket())
   clientes[i].connect(2050, coletores[i].ip, function() {
      clientes[i].on('error', (err) => {
 throw err;
     });
      
      console.log("conectado ao" +coletores[i].nomeColetor);
      coletores[i].status ="1" 
      console.log(coletores)
   
   });
   
   clientes[i].on('data', function(data) {
      console.log("Recebido pelo coletor" + coletores[i].nomeColetor)
      console.log('Received: ' + data);
     // console.log(client)
     
      clientes[i].write('3;100;00125500;E;L;ACESSO;LIBERADO!;5;\r');
   });

});

}

 

/* var client = new net.Socket();

client.connect(2050, 'localhost', function() {
   console.log(client); 

}); */

//client.write('1;500;Conectado;ao servidor;2;\r') 



//client.on('close', function() {
   // client.destroy(); // kill client after server's response
	//console.log('Connection closed');
//});
